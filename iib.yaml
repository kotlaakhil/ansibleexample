---
- name: install mq
  hosts: all
  become: yes
  vars:
    install: /opt/mqm/bin
    path1: /opt/MQServer/
  
  tasks : 
    - name: create users 
      ansible.builtin.user:
        name: mqm

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
       src: /home/ec2-user/IBM_MQ.tar.gz
       dest: /opt
      become: yes 

    - name: extract the file 
      ansible.builtin.unarchive:
       src: /opt/IBM_MQ.tar.gz
       dest: /opt/
       remote_src: yes    

    - name: Updating sysctl.con  file
      ansible.builtin.lineinfile:
        path: /etc/sysctl.conf
        regexp: '^kernel.shmmni = 4096'
        line: kernel.shmmni = 4096
        regexp : '^kernel.shmall = 1073741824'
        line : kernel.shmall = 2097152
        regexp : '^kernel.shmmax = 4398046511104'
        line : kernel.shmmax = 268435456
        regexp : '^kernel.sem = 250 32000 100 128'
        line : kernel.sem = 500 256000 250 1024

    - name: update file with limits
      ansible.builtin.blockinfile:
        path: /etc/security/limits.conf
        block: |
           mqm  hard  nproc  4096
           mqm  soft  nproc  4096
           mqm  hard  nofile 10240
           mqm  soft  nofile 10240

    - name: accept licence 
      ansible.builtin.shell: '{{ path1 }}/mqlicense.sh -accept'

# Get a list of rpms from a directory
    - name: find rpm files and register the result 
      find:
        paths: /opt/MQServer
        patterns: "MQSeries*"
      register: rpm_files
      
# Create a list of the rpms to use with the yum install command
    - set_fact:
       rpm_list: "{{ rpm_files.files | map(attribute='path') | list}}"

    - name: Install RPM files
      ansible.builtin.command: rpm -ivh "{{ item }}"
      with_items: "{{ rpm_list }}"
      become: yes
      ignore_errors: true

    - name : to change path 
      shell: cd  {{install}}
    
    - name: Set MQ instance
      ansible.builtin.command: "{{install}}/setmqinst -i -p /opt/mqm"
      ignore_errors: true
      

    - name : check package is installed or not
      shell : "{{install}}/mqconfig"
      become_user: mqm
      ignore_errors: true

    - name: check version
      shell : dspmqver


  
